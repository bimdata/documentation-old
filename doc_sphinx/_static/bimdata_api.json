{"swagger": "2.0", "info": {"title": "BIMData API", "description": "BIMData API is a tool to interact with your models stored on BIMData\u2019s servers.\n    Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "contact@bimdata.io"}, "license": {"name": "Copyright BIMData"}, "version": "v1"}, "host": "api-staging.bimdata.io", "schemes": ["https"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"type": "apiKey", "description": "Copy/paste a valid access token here prefixed with \"Bearer \"", "name": "Authorization", "in": "header"}}, "security": [{"Bearer": []}], "paths": {"/bcf/2.1/current-user": {"get": {"operationId": "getUser", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SelfBcfUser"}}}, "tags": ["bcf"]}, "parameters": []}, "/bcf/2.1/projects": {"get": {"operationId": "getBcfProjects", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/BcfProject"}}}}, "tags": ["bcf"]}, "parameters": []}, "/bcf/2.1/projects/{id}": {"get": {"operationId": "getBcfProject", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BcfProject"}}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateBcfProject", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BcfProject"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BcfProject"}}}, "tags": ["bcf"]}, "patch": {"operationId": "updateBcfProject", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/BcfProject"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/BcfProject"}}}, "tags": ["bcf"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/bcf/2.1/projects/{id}/export": {"get": {"operationId": "downloadBcfExport", "description": "\n        export project's topics in bcf-xml format\n        ", "parameters": [{"name": "topics", "in": "query", "description": "topic guids to export, comma separated. Default = all", "type": "string"}, {"name": "format", "in": "query", "description": "topic format to export, comma separated. Default = all", "type": "string"}], "responses": {"200": {"description": "The file"}}, "tags": ["bcf"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/bcf/2.1/projects/{projects_pk}/extensions": {"get": {"operationId": "getExtensions", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Extensions"}}}, "tags": ["bcf"]}, "patch": {"operationId": "updateExtensions", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Extensions"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Extensions"}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/full-topic": {"get": {"operationId": "getFullTopics", "description": "", "parameters": [{"name": "ifcs", "in": "query", "description": "Filter the returned list by ifcs", "required": false, "type": "string"}, {"name": "format", "in": "query", "description": "Filter the returned list by format", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SingleJsonTopic"}}}}, "tags": ["bcf"]}, "post": {"operationId": "createFullTopic", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SingleJsonTopic"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/SingleJsonTopic"}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/full-topic/{guid}": {"get": {"operationId": "getFullTopic", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SingleJsonTopic"}}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateFullTopic", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SingleJsonTopic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SingleJsonTopic"}}}, "tags": ["bcf"]}, "patch": {"operationId": "updateFullTopic", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SingleJsonTopic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SingleJsonTopic"}}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "description": "A UUID string identifying this topic.", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics": {"get": {"operationId": "getTopics", "description": "", "parameters": [{"name": "ifcs", "in": "query", "description": "Filter the returned list by ifcs", "required": false, "type": "string"}, {"name": "format", "in": "query", "description": "Filter the returned list by format", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Topic"}}}}, "tags": ["bcf"]}, "post": {"operationId": "createTopic", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Topic"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{guid}": {"get": {"operationId": "getTopic", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateTopic", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Topic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}}, "tags": ["bcf"]}, "patch": {"operationId": "updateTopic", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Topic"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}}, "tags": ["bcf"]}, "delete": {"operationId": "deleteTopic", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "description": "A UUID string identifying this topic.", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/comments": {"get": {"operationId": "getComments", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Comment"}}}}, "tags": ["bcf"]}, "post": {"operationId": "createComment", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/comments/{guid}": {"get": {"operationId": "getComment", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateComment", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["bcf"]}, "patch": {"operationId": "updateComment", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Comment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Comment"}}}, "tags": ["bcf"]}, "delete": {"operationId": "deleteComment", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "description": "A UUID string identifying this comment.", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/topic-viewpoints": {"get": {"operationId": "getTopicViewpoints", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Viewpoint"}}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints": {"get": {"operationId": "getViewpoints", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Viewpoint"}}}}, "tags": ["bcf"]}, "post": {"operationId": "createViewpoint", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Viewpoint"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Viewpoint"}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{guid}": {"get": {"operationId": "getViewpoint", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Viewpoint"}}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateViewpoint", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Viewpoint"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Viewpoint"}}}, "tags": ["bcf"]}, "patch": {"operationId": "updateViewpoint", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Viewpoint"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Viewpoint"}}}, "tags": ["bcf"]}, "delete": {"operationId": "deleteViewpoint", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["bcf"]}, "parameters": [{"name": "guid", "in": "path", "description": "A UUID string identifying this viewpoint.", "required": true, "type": "string", "format": "uuid"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/coloring": {"get": {"operationId": "getColorings", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Coloring"}}}}, "tags": ["bcf"]}, "post": {"operationId": "createColoring", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Coloring"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Coloring"}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}, {"name": "viewpoints_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/coloring/{id}": {"get": {"operationId": "getColoring", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Coloring"}}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateColoring", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Coloring"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Coloring"}}}, "tags": ["bcf"]}, "patch": {"operationId": "updateColoring", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Coloring"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Coloring"}}}, "tags": ["bcf"]}, "delete": {"operationId": "deleteColoring", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["bcf"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this coloring.", "required": true, "type": "integer"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}, {"name": "viewpoints_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/selection": {"get": {"operationId": "getSelections", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Component"}}}}, "tags": ["bcf"]}, "post": {"operationId": "createSelection", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Component"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Component"}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}, {"name": "viewpoints_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/selection/{id}": {"get": {"operationId": "getSelection", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Component"}}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateSelection", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Component"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Component"}}}, "tags": ["bcf"]}, "patch": {"operationId": "updateSelection", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Component"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Component"}}}, "tags": ["bcf"]}, "delete": {"operationId": "deleteSelection", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["bcf"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this component.", "required": true, "type": "integer"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}, {"name": "viewpoints_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/snapshot": {"get": {"operationId": "getSnapshot", "description": "Retrieve the viewpoint' snapshot", "parameters": [], "responses": {"200": {"description": "Snapshot file", "schema": {"description": "Snapshot file", "type": "file"}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}, {"name": "viewpoints_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/visibility": {"get": {"operationId": "getVisibilities", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Visibility"}}}}, "tags": ["bcf"]}, "post": {"operationId": "createVisibility", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Visibility"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Visibility"}}}, "tags": ["bcf"]}, "parameters": [{"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}, {"name": "viewpoints_pk", "in": "path", "required": true, "type": "string"}]}, "/bcf/2.1/projects/{projects_pk}/topics/{topics_pk}/viewpoints/{viewpoints_pk}/visibility/{id}": {"get": {"operationId": "getVisibility", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Visibility"}}}, "tags": ["bcf"]}, "put": {"operationId": "fullUpdateVisibility", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Visibility"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Visibility"}}}, "tags": ["bcf"]}, "patch": {"operationId": "updateVisibility", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Visibility"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Visibility"}}}, "tags": ["bcf"]}, "delete": {"operationId": "deleteVisibility", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["bcf"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this visibility.", "required": true, "type": "integer"}, {"name": "projects_pk", "in": "path", "required": true, "type": "string"}, {"name": "topics_pk", "in": "path", "required": true, "type": "string"}, {"name": "viewpoints_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud": {"get": {"operationId": "getClouds", "description": "Returns user's cloud only", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Cloud"}}}}, "tags": ["cloud"]}, "post": {"operationId": "createCloud", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Cloud"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Cloud"}}}, "tags": ["cloud"]}, "parameters": []}, "/cloud/{cloud_pk}/project": {"get": {"operationId": "getProjects", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}}, "tags": ["project"]}, "post": {"operationId": "createProject", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{id}": {"get": {"operationId": "getProject", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateProject", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["project"]}, "patch": {"operationId": "updateProject", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteProject", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/project/{id}/invite": {"post": {"operationId": "projectInvite", "description": "Invite a user to collaborate in the project. The cloud role will be USER", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectInvitation"}}], "responses": {"202": {"description": "Empty response"}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/project/{id}/tree": {"get": {"operationId": "getProjectTree", "description": "Returns the document tree from root folder", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan": {"get": {"operationId": "getCheckplans", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/CheckPlan"}}}}, "tags": ["checkplan"]}, "post": {"operationId": "createCheckplan", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckPlan"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CheckPlan"}}}, "tags": ["checkplan"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset": {"get": {"operationId": "getRulesets", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Ruleset"}}}}, "tags": ["checkplan"]}, "post": {"operationId": "createRuleset", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ruleset"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Ruleset"}}}, "tags": ["checkplan"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{id}": {"get": {"operationId": "getRuleset", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ruleset"}}}, "tags": ["checkplan"]}, "put": {"operationId": "fullUpdateRuleset", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ruleset"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ruleset"}}}, "tags": ["checkplan"]}, "patch": {"operationId": "updateRuleset", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ruleset"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ruleset"}}}, "tags": ["checkplan"]}, "delete": {"operationId": "deleteRuleset", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["checkplan"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ruleset.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule": {"get": {"operationId": "getRules", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Rule"}}}}, "tags": ["checkplan"]}, "post": {"operationId": "createRule", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Rule"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Rule"}}}, "tags": ["checkplan"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "ruleset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{id}": {"get": {"operationId": "getRule", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Rule"}}}, "tags": ["checkplan"]}, "put": {"operationId": "fullUpdateRule", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Rule"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Rule"}}}, "tags": ["checkplan"]}, "patch": {"operationId": "updateRule", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Rule"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Rule"}}}, "tags": ["checkplan"]}, "delete": {"operationId": "deleteRule", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["checkplan"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this rule.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "ruleset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent": {"get": {"operationId": "getRuleComponents", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/RuleComponent"}}}}, "tags": ["checkplan"]}, "post": {"operationId": "createRuleComponent", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RuleComponent"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RuleComponent"}}}, "tags": ["checkplan"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "rule_pk", "in": "path", "required": true, "type": "string"}, {"name": "ruleset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{check_plan_pk}/ruleset/{ruleset_pk}/rule/{rule_pk}/rulecomponent/{id}": {"get": {"operationId": "getRuleComponent", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RuleComponent"}}}, "tags": ["checkplan"]}, "put": {"operationId": "fullUpdateRuleComponent", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RuleComponent"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RuleComponent"}}}, "tags": ["checkplan"]}, "patch": {"operationId": "updateRuleComponent", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RuleComponent"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RuleComponent"}}}, "tags": ["checkplan"]}, "delete": {"operationId": "deleteRuleComponent", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["checkplan"]}, "parameters": [{"name": "check_plan_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this rule component.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "rule_pk", "in": "path", "required": true, "type": "string"}, {"name": "ruleset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/checkplan/{id}": {"get": {"operationId": "getCheckplan", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckPlan"}}}, "tags": ["checkplan"]}, "put": {"operationId": "fullUpdateCheckplan", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckPlan"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckPlan"}}}, "tags": ["checkplan"]}, "patch": {"operationId": "updateCheckplan", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckPlan"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckPlan"}}}, "tags": ["checkplan"]}, "delete": {"operationId": "deleteCheckplan", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["checkplan"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this check plan.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/classification": {"get": {"operationId": "getClassifications", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}}, "tags": ["project"]}, "post": {"operationId": "createClassification", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \n    If created classification already exists, it will not be duplicated and the previous one will be returned.\n    You also can add a 'classification' filter on this endpoint. By ex: /classification?name='untec'. The name is case sensitive\n    ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}, "400": {"description": "All creates failed: list of errors"}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/classification/{id}": {"get": {"operationId": "getClassification", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Classification"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateClassification", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Classification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Classification"}}}, "tags": ["project"]}, "patch": {"operationId": "updateClassification", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Classification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Classification"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteClassification", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this classification.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/document": {"get": {"operationId": "getDocuments", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "tags": ["project"]}, "post": {"operationId": "createDocument", "description": "", "parameters": [{"name": "parent", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "parent_id", "in": "formData", "required": false, "type": "integer"}, {"name": "creator", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "project", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "name", "in": "formData", "required": true, "type": "string", "maxLength": 512, "minLength": 1}, {"name": "file_name", "in": "formData", "required": false, "type": "string", "maxLength": 512, "x-nullable": true}, {"name": "description", "in": "formData", "required": false, "type": "string", "x-nullable": true}, {"name": "file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "size", "in": "formData", "required": false, "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/document/{id}": {"get": {"operationId": "getDocument", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateDocument", "description": "", "parameters": [{"name": "parent", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "parent_id", "in": "formData", "required": false, "type": "integer"}, {"name": "creator", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "project", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "name", "in": "formData", "required": true, "type": "string", "maxLength": 512, "minLength": 1}, {"name": "file_name", "in": "formData", "required": false, "type": "string", "maxLength": 512, "x-nullable": true}, {"name": "description", "in": "formData", "required": false, "type": "string", "x-nullable": true}, {"name": "file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "size", "in": "formData", "required": false, "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["project"]}, "patch": {"operationId": "updateDocument", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Document"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteDocument", "description": "", "parameters": [], "responses": {"204": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this document.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/folder": {"get": {"operationId": "getFolders", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Folder"}}}}, "tags": ["project"]}, "post": {"operationId": "createFolder", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Folder"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/folder/{id}": {"get": {"operationId": "getFolder", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateFolder", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Folder"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "patch": {"operationId": "updateFolder", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Folder"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteFolder", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this folder.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc": {"get": {"operationId": "getIfcs", "description": "Returns all IFCs of the project", "parameters": [{"name": "status", "in": "query", "description": "Filter the returned list by status", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Ifc"}}}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}": {"get": {"operationId": "getIfc", "description": "Get one IFC details", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ifc"}}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateIfc", "description": "Update all IFC attributes", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ifc"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ifc"}}}, "tags": ["ifc"]}, "patch": {"operationId": "updateIfc", "description": "Update some IFC attributes", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Ifc"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Ifc"}}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteIfc", "description": "Delete IFC. Will also delete all properties and generated files. If the IFC is heavy, it can take several seconds.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/bvh": {"get": {"operationId": "getIfcBVH", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the bvh file\n        ", "parameters": [], "responses": {"200": {"description": "The file"}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/files": {"patch": {"operationId": "updateIfcFiles", "description": "\n        Patch ifc files (gltf, structure, svg, etc)\n        ", "parameters": [{"name": "structure_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "systems_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "map_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "gltf_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "bvh_tree_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "viewer_360_file", "in": "formData", "required": false, "type": "file", "x-nullable": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcFiles"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/gltf": {"get": {"operationId": "getIfcGLTF", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the gltf file\n        ", "parameters": [], "responses": {"200": {"description": "The file"}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/map": {"get": {"operationId": "getIfcMap", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the map file\n        ", "parameters": [], "responses": {"200": {"description": "The file"}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/structure": {"get": {"operationId": "getIfcStructure", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the structure file\n        ", "parameters": [], "responses": {"200": {"description": "The file"}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{id}/systems": {"get": {"operationId": "getIfcSystems", "description": "\n        DEPRECATED: Now, retrieve the file url in the ifc object itself\n        Returns the system file\n        ", "parameters": [], "responses": {"200": {"description": "The file"}}, "tags": ["ifc"], "deprecated": true}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker": {"get": {"operationId": "getCheckers", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/IfcChecker"}}}}, "tags": ["checkplan"]}, "post": {"operationId": "createChecker", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcChecker"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/IfcChecker"}}}, "tags": ["checkplan"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result": {"get": {"operationId": "getCheckerResults", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/CheckerResult"}}}}, "tags": ["checkplan"]}, "post": {"operationId": "createCheckerResult", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckerResult"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CheckerResult"}}}, "tags": ["checkplan"]}, "parameters": [{"name": "checker_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{checker_pk}/result/{id}": {"get": {"operationId": "getCheckerResult", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckerResult"}}}, "tags": ["checkplan"]}, "put": {"operationId": "fullUpdateCheckerResult", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckerResult"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckerResult"}}}, "tags": ["checkplan"]}, "patch": {"operationId": "updateCheckerResult", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CheckerResult"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CheckerResult"}}}, "tags": ["checkplan"]}, "delete": {"operationId": "deleteCheckerResult", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["checkplan"]}, "parameters": [{"name": "checker_pk", "in": "path", "required": true, "type": "string"}, {"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this checker result.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}": {"get": {"operationId": "getChecker", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcChecker"}}}, "tags": ["checkplan"]}, "put": {"operationId": "fullUpdateChecker", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcChecker"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcChecker"}}}, "tags": ["checkplan"]}, "patch": {"operationId": "updateChecker", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcChecker"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IfcChecker"}}}, "tags": ["checkplan"]}, "delete": {"operationId": "deleteChecker", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["checkplan"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc checker.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/checker/{id}/launch-check": {"post": {"operationId": "launchNewCheck", "description": "Starts a new check in the checker", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IfcChecker"}}], "responses": {"201": {"description": ""}}, "tags": ["checkplan"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this ifc checker.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification": {"get": {"operationId": "getIfcClassifications", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification-element": {"get": {"operationId": "listClassificationElementRelations", "description": "\n            list association between classifications and elements\n        ", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ElementClassificationRelation"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createClassificationElementRelations", "description": "\n            create association between existing classification and existing element\n        ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/ElementClassificationRelation"}}}], "responses": {"201": {"description": "The response is empty"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/list_destroy": {"delete": {"operationId": "bulkDeleteIfcClassifications", "description": "\n            Delete relation between filtered classifications (eg. /classifications?name=untec) and all ifc's elements.\n            No classification will be deleted on this endpoint, only the relation between ifc's elements and their classification.\n        ", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element": {"get": {"operationId": "getElementsFromClassification", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_classification_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element/bulk_destroy": {"delete": {"operationId": "bulkRemoveElementsFromClassification", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    ", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_classification_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/classification/{ifc_classification_pk}/element/{uuid}": {"delete": {"operationId": "removeElementsFromClassification", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_classification_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "uuid", "in": "path", "description": "IFC element or element type UUID", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element": {"get": {"operationId": "getElements", "description": "", "parameters": [{"name": "type", "in": "query", "description": "Filter the returned list by type", "required": false, "type": "string"}, {"name": "classification", "in": "query", "description": "Filter the returned list by classification", "required": false, "type": "string"}, {"name": "classification__notation", "in": "query", "description": "Filter the returned list by classification__notation", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createElement", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}, "400": {"description": "If all creates fail: a list of errors"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/bulk_update": {"put": {"operationId": "bulkUpdateElements", "description": "\n        Bulk update.\n        Similar to update, but the body should be a list of objects to patch or put\n        The response will be a list (in the same order) of updated objects or of errors if any\n        If at least one update succeeded, the status code will be 200. If every update failed, the status code we'll be 400 with the list of errors\n    ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}, "400": {"description": "If all updates fail: a list of errors"}}, "tags": ["ifc"]}, "patch": {"operationId": "bulkFullUpdateElements", "description": "\n        Bulk update.\n        Similar to update, but the body should be a list of objects to patch or put\n        The response will be a list (in the same order) of updated objects or of errors if any\n        If at least one update succeeded, the status code will be 200. If every update failed, the status code we'll be 400 with the list of errors\n    ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Element"}}}, "400": {"description": "If all updates fail: a list of errors"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/raw": {"get": {"operationId": "getRawElements", "description": "\n        Returns elements, property_sets, properties, definitions and units in a JSON optimized structure\n        ", "parameters": [{"name": "type", "in": "query", "description": "Filter the returned list by type", "required": false, "type": "string"}, {"name": "classification", "in": "query", "description": "Filter the returned list by classification", "required": false, "type": "string"}, {"name": "classification__notation", "in": "query", "description": "Filter the returned list by classification__notation", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RawElements"}}}, "tags": ["ifc"]}, "post": {"operationId": "createRawElements", "description": "\n        You can use the same optimized structure to post multiple elements, property_sets, properties, definitions and units at once.\n        If the structure is malformed, an error 500 without more explaination may be returned\n        ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RawElements"}}], "responses": {"201": {"description": "Empty response"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification": {"get": {"operationId": "getClassificationsOfElement", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createClassificationsOfElement", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \n    If classification created already exists, it will just be added to item's classifications and will not be duplicated\n    ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}, "400": {"description": "All creates failed: list of errors"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/bulk_destroy": {"delete": {"operationId": "bulkRemoveClassificationsOfElement", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    ", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/classification/{id}": {"delete": {"operationId": "removeClassificationOfElement", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this classification.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset": {"get": {"operationId": "getElementPropertySets", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createElementPropertySet", "description": "\n        Create an property_set that will be automatically linked to the element\n        ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertySet"}}], "responses": {"204": {"description": "No content"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{id}": {"get": {"operationId": "getElementPropertySet", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertySet"}}}, "tags": ["ifc"]}, "delete": {"operationId": "removeElementPropertySet", "description": "\n        Delete the relation between the element and the property set. Does not delete any object\n        ", "parameters": [], "responses": {"204": {"description": "No content"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property set.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property": {"get": {"operationId": "getElementPropertySetProperties", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createElementPropertySetProperty", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Property"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Property"}}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{id}": {"get": {"operationId": "getElementPropertySetProperty", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Property"}}}, "tags": ["ifc"]}, "delete": {"operationId": "removeElementPropertySetProperty", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition": {"get": {"operationId": "getElementPropertySetPropertyDefinitions", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertyDefinition"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createElementPropertySetPropertyDefinition", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertyDefinition"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "property_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{id}": {"get": {"operationId": "getElementPropertySetPropertyDefinition", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}}, "tags": ["ifc"]}, "delete": {"operationId": "removeElementPropertySetPropertyDefinition", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property definition.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "property_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit": {"get": {"operationId": "getElementPropertySetPropertyDefinitionUnits", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Unit"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createElementPropertySetPropertyDefinitionUnit", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Unit"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "property_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertydefinition_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{element_uuid}/propertyset/{propertyset_pk}/property/{property_pk}/propertydefinition/{propertydefinition_pk}/unit/{id}": {"get": {"operationId": "getElementPropertySetPropertyDefinitionUnit", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}}, "tags": ["ifc"]}, "delete": {"operationId": "removeElementPropertySetPropertyDefinitionUnit", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "element_uuid", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this unit.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "property_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertydefinition_pk", "in": "path", "required": true, "type": "string"}, {"name": "propertyset_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/element/{uuid}": {"get": {"operationId": "getElement", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Element"}}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateElement", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Element"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Element"}}}, "tags": ["ifc"]}, "patch": {"operationId": "updateElement", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Element"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Element"}}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteElement", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "uuid", "in": "path", "description": "IFC element or element type UUID", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property": {"get": {"operationId": "getIfcProperties", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_destroy": {"delete": {"operationId": "bulkDeleteIfcProperties", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    ", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/bulk_update": {"put": {"operationId": "bulkUpdateIfcProperty", "description": "\n        Bulk update.\n        Similar to update, but the body should be a list of objects to patch or put\n        The response will be a list (in the same order) of updated objects or of errors if any\n        If at least one update succeeded, the status code will be 200. If every update failed, the status code we'll be 400 with the list of errors\n    ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}, "400": {"description": "All updates failed: list of errors"}}, "tags": ["ifc"]}, "patch": {"operationId": "bulkFullUpdateIfcProperty", "description": "\n        Bulk update.\n        Similar to update, but the body should be a list of objects to patch or put\n        The response will be a list (in the same order) of updated objects or of errors if any\n        If at least one update succeeded, the status code will be 200. If every update failed, the status code we'll be 400 with the list of errors\n    ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}, "400": {"description": "All updates failed: list of errors"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/property/{id}": {"get": {"operationId": "getIfcProperty", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Property"}}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateIfcProperty", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Property"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Property"}}}, "tags": ["ifc"]}, "patch": {"operationId": "updateIfcProperty", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Property"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Property"}}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteIfcProperty", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition": {"get": {"operationId": "getIfcPropertyDefinitions", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertyDefinition"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createIfcPropertyDefinition", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \n        If classification created already exists, it will just be added to item's classifications and will not be duplicated\n        ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertyDefinition"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertyDefinition"}}}, "400": {"description": "All creates failed: list of errors"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/bulk_destroy": {"delete": {"operationId": "bulkDeleteIfcPropertyDefinitions", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    ", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertydefinition/{id}": {"get": {"operationId": "getIfcPropertyDefinition", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateIfcPropertyDefinition", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertyDefinition"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}}, "tags": ["ifc"]}, "patch": {"operationId": "updateIfcPropertyDefinition", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertyDefinition"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertyDefinition"}}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteIfcPropertyDefinition", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property definition.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset": {"get": {"operationId": "getPropertySets", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createPropertySet", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \n        If classification created already exists, it will just be added to item's classifications and will not be duplicated\n        ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}}, "400": {"description": "All creates failed: list of errors"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset-element": {"post": {"operationId": "createPropertySetElementRelations", "description": "\n            create association between existing classification and existing element\n        ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/ElementPropertySetRelation"}}}], "responses": {"201": {"description": "The response is empty"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/bulk_destroy": {"delete": {"operationId": "bulkDeletePropertySet", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    ", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/propertyset/{id}": {"get": {"operationId": "getPropertySet", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertySet"}}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdatePropertySet", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertySet"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertySet"}}}, "tags": ["ifc"]}, "patch": {"operationId": "updatePropertySet", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PropertySet"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/PropertySet"}}}, "tags": ["ifc"]}, "delete": {"operationId": "deletePropertySet", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this property set.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space": {"get": {"operationId": "getSpaces", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Space"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createSpace", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Space"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Space"}}}, "400": {"description": "All creates failed: list of errors"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/space/{id}": {"get": {"operationId": "getSpace", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateSpace", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["ifc"]}, "patch": {"operationId": "updateSpace", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteSpace", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this space.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit": {"get": {"operationId": "getIfcUnits", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Unit"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createIfcUnit", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \n        If classification created already exists, it will just be added to item's classifications and will not be duplicated\n        ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Unit"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Unit"}}}, "400": {"description": "All creates failed: list of errors"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/bulk_destroy": {"delete": {"operationId": "bulkDeleteIfcUnits", "description": "\n        Bulk delete.\n        You should send a list of ids in the body.\n        These ids (or relations with these ids in case of many-to-many relation deletion) will be deleted\n    ", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/unit/{id}": {"get": {"operationId": "getIfcUnit", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateIfcUnit", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Unit"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}}, "tags": ["ifc"]}, "patch": {"operationId": "updateIfcUnit", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Unit"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Unit"}}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteIfcUnit", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this unit.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone": {"get": {"operationId": "getZones", "description": "", "parameters": [{"name": "color", "in": "query", "description": "Filter the returned list by color", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Zone"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createZone", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Zone"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Zone"}}}, "400": {"description": "If all creates fail: a list of errors"}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{id}": {"get": {"operationId": "getZone", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Zone"}}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateZone", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Zone"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Zone"}}}, "tags": ["ifc"]}, "patch": {"operationId": "updateZone", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Zone"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Zone"}}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteZone", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this zone.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space": {"get": {"operationId": "getZoneSpaces", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ZoneSpace"}}}}, "tags": ["ifc"]}, "post": {"operationId": "createZoneSpace", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ZoneSpace"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ZoneSpace"}}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "zone_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/ifc/{ifc_pk}/zone/{zone_pk}/space/{id}": {"get": {"operationId": "getZoneSpace", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ZoneSpace"}}}, "tags": ["ifc"]}, "put": {"operationId": "fullUpdateZoneSpace", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ZoneSpace"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ZoneSpace"}}}, "tags": ["ifc"]}, "patch": {"operationId": "updateZoneSpace", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ZoneSpace"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ZoneSpace"}}}, "tags": ["ifc"]}, "delete": {"operationId": "deleteZoneSpace", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ifc"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this space.", "required": true, "type": "integer"}, {"name": "ifc_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}, {"name": "zone_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/user": {"get": {"operationId": "getProjectUsers", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/user/{id}": {"get": {"operationId": "getProjectUser", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateProjectUser", "description": "Change the user role in the cloud", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserProjectUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["project"]}, "patch": {"operationId": "updateProjectUser", "description": "Change the user role in the cloud", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserProjectUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteProjectUser", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/user": {"get": {"operationId": "getCloudUsers", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}, "tags": ["cloud"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/user/{id}": {"get": {"operationId": "getCloudUser", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["cloud"]}, "put": {"operationId": "fullUpdateCloudUser", "description": "Change the user role in the cloud", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserCloudUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["cloud"]}, "patch": {"operationId": "updateCloudUser", "description": "Change the user role in the cloud", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserCloudUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["cloud"]}, "delete": {"operationId": "deleteCloudUser", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["cloud"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/webhook": {"get": {"operationId": "getWebHooks", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/WebHook"}}}}, "tags": ["application"]}, "post": {"operationId": "createWebHook", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebHook"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}}, "tags": ["application"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/webhook/{id}": {"get": {"operationId": "getWebHook", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}}, "tags": ["application"]}, "put": {"operationId": "fullUpdateWebHook", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebHook"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}}, "tags": ["application"]}, "patch": {"operationId": "updateWebHook", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebHook"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}}, "tags": ["application"]}, "delete": {"operationId": "deleteWebHook", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["application"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/webhook/{id}/ping": {"post": {"operationId": "cloud_webhook_ping", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WebHook"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/WebHook"}}}, "tags": ["application"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}]}, "/cloud/{id}": {"get": {"operationId": "getCloud", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Cloud"}}}, "tags": ["cloud"]}, "put": {"operationId": "fullUpdateCloud", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Cloud"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Cloud"}}}, "tags": ["cloud"]}, "patch": {"operationId": "updateCloud", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Cloud"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Cloud"}}}, "tags": ["cloud"]}, "delete": {"operationId": "deleteCloud", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["cloud"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud.", "required": true, "type": "integer"}]}, "/cloud/{id}/create-demo": {"post": {"operationId": "createDemo", "description": "Create a demo project with a pre-populated IFC and its data", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["cloud"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud.", "required": true, "type": "integer"}]}, "/cloud/{id}/invite": {"post": {"operationId": "cloudInvite", "description": "Invite a cloud administrator. They will have the ADMIN role on the cloud and on each project of the cloud", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CloudInvitation"}}], "responses": {"202": {"description": "Empty response"}}, "tags": ["cloud"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud.", "required": true, "type": "integer"}]}, "/cloud/{id}/size": {"get": {"operationId": "getCloudSize", "description": "Returns the size of the cloud in Bytes", "parameters": [], "responses": {"200": {"description": "Size of the cloud in Bytes", "schema": {"type": "integer"}}}, "tags": ["cloud"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this cloud.", "required": true, "type": "integer"}]}, "/user": {"get": {"operationId": "getSelfUser", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SelfUser"}}}, "tags": ["user"]}, "patch": {"operationId": "updateSelfUser", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SelfUser"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/SelfUser"}}}, "tags": ["user"]}, "parameters": []}, "/user/projects": {"get": {"operationId": "getSelfProjects", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}}, "tags": ["user"]}, "parameters": []}}, "definitions": {"SelfBcfUser": {"required": ["id", "email"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}}, "title": "SelfBcfUser"}, "BcfProject": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 256, "minLength": 1}}}, "TopicType": {"required": ["topic_type"], "type": "object", "properties": {"topic_type": {"title": "Topic type", "type": "string", "maxLength": 255, "minLength": 1}}}, "TopicStatus": {"required": ["topic_status"], "type": "object", "properties": {"topic_status": {"title": "Topic status", "type": "string", "maxLength": 255, "minLength": 1}}}, "Label": {"required": ["label"], "type": "object", "properties": {"label": {"title": "Label", "type": "string", "maxLength": 255, "minLength": 1}}}, "Priority": {"required": ["priority"], "type": "object", "properties": {"priority": {"title": "Priority", "type": "string", "maxLength": 255, "minLength": 1}}}, "Stage": {"required": ["stage"], "type": "object", "properties": {"stage": {"title": "Stage", "type": "string", "maxLength": 255, "minLength": 1}}}, "Extensions": {"required": ["topic_type", "topic_status", "topic_label", "priority", "stage"], "type": "object", "properties": {"topic_type": {"type": "array", "items": {"title": "TopicType", "type": "string", "minLength": 0}, "x-nullable": true}, "topic_status": {"type": "array", "items": {"title": "TopicStatus", "type": "string", "minLength": 0}, "x-nullable": true}, "topic_label": {"type": "array", "items": {"title": "Labels", "type": "string", "minLength": 0}, "x-nullable": true}, "priority": {"type": "array", "items": {"title": "Priority", "type": "string", "minLength": 0}, "x-nullable": true}, "user_id_type": {"type": "array", "items": {"type": "string", "minLength": 1}, "readOnly": true}, "stage": {"type": "array", "items": {"title": "Stage", "type": "string", "minLength": 0}, "x-nullable": true}}}, "BcfUser": {"title": "Creation author", "required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}}}, "Comment": {"required": ["comment"], "type": "object", "properties": {"guid": {"title": "Guid", "type": "string", "format": "uuid", "readOnly": true}, "date": {"title": "Date", "type": "string", "format": "date-time", "readOnly": true}, "author": {"type": "string", "format": "email", "title": "User", "x-nullable": true, "readOnly": true}, "comment": {"title": "Comment", "type": "string", "minLength": 1}, "viewpoint_guid": {"title": "Viewpoint guid", "type": "string", "format": "uuid", "x-nullable": true}, "reply_to_comment_guid": {"title": "Reply to comment guid", "type": "string", "format": "uuid", "x-nullable": true}, "topic_guid": {"title": "Topic guid", "type": "string", "format": "uuid", "readOnly": true}, "modified_author": {"type": "string", "format": "email", "title": "User", "x-nullable": true, "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "viewpoint_temp_id": {"title": "Viewpoint temp id", "description": "Only used when using POST on the full-topic route to bind viewpoint with comment", "type": "integer"}}}, "Direction": {"title": "Camera direction", "required": ["x", "y", "z"], "type": "object", "properties": {"x": {"title": "X", "type": "number"}, "y": {"title": "Y", "type": "number"}, "z": {"title": "Z", "type": "number"}}}, "Point": {"title": "Camera view point", "required": ["x", "y", "z"], "type": "object", "properties": {"x": {"title": "X", "type": "number"}, "y": {"title": "Y", "type": "number"}, "z": {"title": "Z", "type": "number"}}}, "OrthogonalCamera": {"title": "Orthogonal camera", "required": ["view_to_world_scale", "camera_direction", "camera_up_vector", "camera_view_point"], "type": "object", "properties": {"view_to_world_scale": {"title": "View to world scale", "type": "number"}, "camera_direction": {"$ref": "#/definitions/Direction"}, "camera_up_vector": {"$ref": "#/definitions/Direction"}, "camera_view_point": {"$ref": "#/definitions/Point"}}}, "PerspectiveCamera": {"title": "Perspective camera", "required": ["field_of_view", "camera_direction", "camera_up_vector", "camera_view_point"], "type": "object", "properties": {"field_of_view": {"title": "Field of view", "type": "number"}, "camera_direction": {"$ref": "#/definitions/Direction"}, "camera_up_vector": {"$ref": "#/definitions/Direction"}, "camera_view_point": {"$ref": "#/definitions/Point"}}}, "LineSeriaizer": {"required": ["end_point", "start_point"], "type": "object", "properties": {"end_point": {"$ref": "#/definitions/Point"}, "start_point": {"$ref": "#/definitions/Point"}}}, "ClippingPlane": {"required": ["location", "direction"], "type": "object", "properties": {"location": {"$ref": "#/definitions/Point"}, "direction": {"$ref": "#/definitions/Direction"}}}, "Snapshot": {"title": "Snapshot", "required": ["snapshot_type"], "type": "object", "properties": {"snapshot_type": {"title": "Snapshot type", "type": "string", "maxLength": 255, "minLength": 1}, "snapshot_data": {"title": "Snapshot data", "type": "string", "readOnly": true, "format": "uri"}}}, "Component": {"type": "object", "properties": {"ifc_guid": {"title": "Ifc guid", "type": "string", "maxLength": 255, "x-nullable": true}, "originating_system": {"title": "Originating system", "type": "string", "maxLength": 255, "x-nullable": true}, "authoring_tool_id": {"title": "Authoring tool id", "type": "string", "maxLength": 255, "x-nullable": true}}}, "Coloring": {"required": ["color", "components"], "type": "object", "properties": {"color": {"title": "Color", "type": "string", "maxLength": 255, "minLength": 1}, "components": {"type": "array", "items": {"$ref": "#/definitions/Component"}}}}, "ViewSetupHints": {"title": "View setup hints", "type": "object", "properties": {"spaces_visible": {"title": "Spaces visible", "type": "boolean"}, "space_boundaries_visible": {"title": "Space boundaries visible", "type": "boolean"}, "openings_visible": {"title": "Openings visible", "type": "boolean"}}}, "Visibility": {"title": "Visibility", "required": ["exceptions", "view_setup_hints"], "type": "object", "properties": {"default_visibility": {"title": "Default visibility", "type": "boolean"}, "exceptions": {"type": "array", "items": {"$ref": "#/definitions/Component"}}, "view_setup_hints": {"$ref": "#/definitions/ViewSetupHints"}}}, "ComponentsParent": {"title": "Components", "required": ["visibility"], "type": "object", "properties": {"coloring": {"type": "array", "items": {"$ref": "#/definitions/Coloring"}}, "visibility": {"$ref": "#/definitions/Visibility"}, "selection": {"type": "array", "items": {"$ref": "#/definitions/Component"}}}}, "Viewpoint": {"type": "object", "properties": {"index": {"title": "Index", "type": "integer", "readOnly": true}, "guid": {"title": "Guid", "type": "string", "format": "uuid", "readOnly": true}, "orthogonal_camera": {"$ref": "#/definitions/OrthogonalCamera"}, "perspective_camera": {"$ref": "#/definitions/PerspectiveCamera"}, "lines": {"type": "array", "items": {"$ref": "#/definitions/LineSeriaizer"}}, "clipping_planes": {"type": "array", "items": {"$ref": "#/definitions/ClippingPlane"}}, "snapshot": {"$ref": "#/definitions/Snapshot"}, "components": {"$ref": "#/definitions/ComponentsParent"}, "temp_id": {"title": "Temp id", "description": "Only used when using POST on the full-topic route to bind viewpoint with comment", "type": "integer"}}}, "SingleJsonTopic": {"required": ["title"], "type": "object", "properties": {"guid": {"title": "Guid", "type": "string", "format": "uuid", "readOnly": true}, "creation_date": {"title": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "creation_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "modified_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "reference_links": {"type": "array", "items": {"title": "Reference links", "type": "string", "minLength": 1}, "x-nullable": true}, "ifcs": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "labels": {"type": "array", "items": {"title": "Labels", "type": "string", "minLength": 0}, "x-nullable": true}, "topic_type": {"type": "string", "title": "TopicType", "x-nullable": true}, "topic_status": {"type": "string", "title": "TopicStatus", "x-nullable": true}, "stage": {"type": "string", "title": "Stage", "x-nullable": true}, "priority": {"type": "string", "title": "Priority", "x-nullable": true}, "index": {"title": "Index", "type": "integer", "readOnly": true}, "assigned_to": {"type": "string", "format": "email", "title": "User", "x-nullable": true}, "format": {"title": "Format", "type": "string", "maxLength": 64, "minLength": 1}, "due_date": {"title": "Due date", "type": "string", "format": "date-time", "x-nullable": true}, "comments": {"type": "array", "items": {"$ref": "#/definitions/Comment"}}, "viewpoints": {"type": "array", "items": {"$ref": "#/definitions/Viewpoint"}}}}, "Topic": {"required": ["title"], "type": "object", "properties": {"guid": {"title": "Guid", "type": "string", "format": "uuid", "readOnly": true}, "topic_type": {"type": "string", "title": "TopicType", "x-nullable": true}, "topic_status": {"type": "string", "title": "TopicStatus", "x-nullable": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "priority": {"type": "string", "title": "Priority", "x-nullable": true}, "labels": {"type": "array", "items": {"title": "Labels", "type": "string", "minLength": 0}, "x-nullable": true}, "creation_date": {"title": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "creation_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "modified_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "assigned_to": {"type": "string", "format": "email", "title": "User", "x-nullable": true}, "reference_links": {"type": "array", "items": {"title": "Reference links", "type": "string", "minLength": 1}, "x-nullable": true}, "stage": {"type": "string", "title": "Stage", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "due_date": {"title": "Due date", "type": "string", "format": "date-time", "x-nullable": true}, "ifcs": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "format": {"title": "Format", "type": "string", "maxLength": 64, "minLength": 1}, "index": {"title": "Index", "type": "integer", "readOnly": true}}}, "Feature": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 127, "minLength": 1}, "viewer_url": {"title": "Viewer url", "type": "string", "maxLength": 512, "x-nullable": true}}}, "User": {"title": "User", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "readOnly": true, "minLength": 1}, "company": {"title": "Company", "type": "string", "readOnly": true}, "firstname": {"title": "Firstname", "type": "string", "readOnly": true, "minLength": 1}, "lastname": {"title": "Lastname", "type": "string", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "cloud_role": {"title": "Cloud role", "type": "integer", "readOnly": true}, "project_role": {"title": "Project role", "type": "integer", "readOnly": true}}}, "Cloud": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 256, "minLength": 1}, "features": {"type": "array", "items": {"$ref": "#/definitions/Feature"}, "readOnly": true}, "creator": {"$ref": "#/definitions/User"}, "is_default": {"title": "Is default", "type": "boolean", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "Project": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "cloud": {"$ref": "#/definitions/Cloud"}, "name": {"title": "Name", "type": "string", "maxLength": 256, "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["A", "D"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "root_folder_id": {"title": "Root folder id", "type": "string", "readOnly": true}, "property_permissions_enabled": {"title": "Property permissions enabled", "type": "boolean"}}}, "ProjectInvitation": {"required": ["email", "role", "redirect_uri"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}, "role": {"title": "Role", "type": "integer", "enum": [100, 50, 25]}, "redirect_uri": {"title": "Redirect uri", "description": "User will be redirected to this uri when he accepts the invitation", "type": "string", "minLength": 1}}}, "Folder": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent_id": {"title": "Parent id", "type": "integer"}, "type": {"title": "Type", "description": "Value is \"Folder\". It is usefull to parse the tree and discriminate folders and files", "type": "string", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "children": {"type": "array", "items": {"$ref": "#/definitions/Folder"}, "readOnly": true}, "created_by": {"$ref": "#/definitions/User"}}}, "RuleComponent": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "value": {"title": "Value", "type": "string", "x-nullable": true}, "operator": {"title": "Operator", "type": "string", "x-nullable": true}, "params": {"title": "Params", "type": "string", "x-nullable": true}, "condition": {"title": "Condition", "type": "string", "x-nullable": true}, "rule_components": {"title": "Rule components", "type": "string", "x-nullable": true}}}, "Rule": {"required": ["condition"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "condition": {"title": "Condition", "type": "string", "minLength": 1}, "rule_components": {"type": "array", "items": {"$ref": "#/definitions/RuleComponent"}}, "on": {"$ref": "#/definitions/Rule"}}}, "Ruleset": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent_ruleset_id": {"title": "Parent ruleset id", "type": "string"}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "rules": {"type": "array", "items": {"$ref": "#/definitions/Rule"}}, "rulesets": {"type": "array", "items": {"$ref": "#/definitions/Ruleset"}}}}, "CheckPlan": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "rulesets": {"type": "array", "items": {"$ref": "#/definitions/Ruleset"}}, "is_default": {"title": "Is default", "type": "boolean", "readOnly": true}}}, "Classification": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "notation": {"title": "Notation", "type": "string", "x-nullable": true}, "title": {"title": "Title", "type": "string", "x-nullable": true}}}, "Document": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent": {"title": "Parent", "type": "integer", "x-nullable": true}, "parent_id": {"title": "Parent id", "type": "integer"}, "creator": {"title": "Creator", "type": "integer", "x-nullable": true}, "project": {"title": "Project", "type": "integer", "x-nullable": true}, "name": {"title": "Name", "type": "string", "maxLength": 512, "minLength": 1}, "file_name": {"title": "File name", "type": "string", "maxLength": 512, "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "file": {"title": "File", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "size": {"title": "Size", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "ifc_id": {"title": "Ifc id", "type": "string", "readOnly": true}}}, "Ifc": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true}, "creator": {"$ref": "#/definitions/User"}, "status": {"title": "Status", "type": "string", "enum": ["C", "D", "P", "I", "E"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "document_id": {"title": "Document id", "type": "string", "readOnly": true}, "document": {"$ref": "#/definitions/Document"}, "structure_file": {"title": "Structure file", "type": "string", "readOnly": true, "format": "uri"}, "systems_file": {"title": "Systems file", "type": "string", "readOnly": true, "format": "uri"}, "map_file": {"title": "Map file", "type": "string", "readOnly": true, "format": "uri"}, "gltf_file": {"title": "Gltf file", "type": "string", "readOnly": true, "format": "uri"}, "bvh_tree_file": {"title": "Bvh tree file", "type": "string", "readOnly": true, "format": "uri"}, "viewer_360_file": {"title": "Viewer 360 file", "type": "string", "readOnly": true, "format": "uri"}, "error_detail": {"title": "Error detail", "type": "string", "minLength": 1}, "project_id": {"title": "Project id", "type": "string", "readOnly": true}}}, "IfcFiles": {"type": "object", "properties": {"structure_file": {"title": "Structure file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "systems_file": {"title": "Systems file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "map_file": {"title": "Map file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "gltf_file": {"title": "Gltf file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "bvh_tree_file": {"title": "Bvh tree file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "viewer_360_file": {"title": "Viewer 360 file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "IfcChecker": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "creator": {"$ref": "#/definitions/User"}, "name": {"title": "Name", "type": "string", "maxLength": 256, "x-nullable": true}, "checkplan_id": {"title": "Checkplan id", "type": "integer"}, "results": {"type": "array", "items": {"required": ["checker"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "error_detail": {"title": "Error detail", "type": "string", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["C", "P", "E"]}, "result": {"title": "Result", "type": "string", "x-nullable": true}, "collisions": {"title": "Collisions", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "checker": {"title": "Checker", "type": "integer"}}}, "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "checkplan": {"required": ["name", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "protected": {"title": "Protected", "type": "boolean"}, "project": {"title": "Project", "type": "integer"}}, "readOnly": true}}}, "CheckerResult": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["C", "P", "E"]}, "result": {"title": "Result", "type": "string", "x-nullable": true}, "collisions": {"title": "Collisions", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "error_detail": {"title": "Error detail", "type": "string", "minLength": 1}}}, "ElementClassificationRelation": {"required": ["element_uuid", "classification_id"], "type": "object", "properties": {"element_uuid": {"title": "Element uuid", "type": "string", "minLength": 1}, "classification_id": {"title": "Classification id", "type": "integer"}}}, "Unit": {"title": "Unit", "required": ["type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "description": "IfcDerivedUnit, IfcContextDependentUnit, IfcConversionBasedUnit, IfcSIUnit or IfcMonetaryUnit", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Name of the unit (ex: DEGREE)", "type": "string", "x-nullable": true}, "unit_type": {"title": "Unit type", "description": "IFC type of the unit or user defined type (ex: PLANEANGLEUNIT for DEGREE and RADIAN)", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "description": "Litteral prefix for scale (ex: MILLI, KILO, etc..)", "type": "string", "x-nullable": true}, "dimensions": {"description": "List of 7 units dimensions", "type": "array", "items": {"title": "Dimensions", "type": "number"}, "x-nullable": true}, "conversion_factor": {"title": "Conversion factor", "description": "Factor of conversion and base unit id (ex: DEGREE from RADIAN with factor 0.0174532925199433)", "type": "number", "x-nullable": true}, "conversion_baseunit": {"$ref": "#/definitions/Unit"}, "elements": {"title": "Elements", "description": "List of constitutive unit elements by id with corresponding exponent (ex: [meterID/1, secondID/-1] for velocity)", "type": "string", "x-nullable": true}}}, "PropertyDefinition": {"title": "Definition", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "unit": {"$ref": "#/definitions/Unit"}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "type": {"title": "Type", "description": "IfcProperty*, Ifc*Properties, IfcComplexProperty, IfcQuantity*, IfcComplexQuantity, Attribute", "type": "string", "x-nullable": true}, "value_type": {"title": "Value type", "description": "Type of the corresponding value (Boolean, integer, float, string, IfcRange, ...)", "type": "string", "x-nullable": true}}}, "Property": {"required": ["definition"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "definition": {"$ref": "#/definitions/PropertyDefinition"}, "value": {"title": "Value", "type": "string", "x-nullable": true}}}, "PropertySet": {"title": "Attributes", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "properties": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}}, "Element": {"required": ["type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 22, "minLength": 22}, "type": {"title": "Type", "description": "IFC type for the element", "type": "string", "maxLength": 64, "minLength": 1}, "attributes": {"$ref": "#/definitions/PropertySet"}, "property_sets": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}, "classifications": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}}, "RawUnit": {"required": ["type"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "minLength": 1}, "unit_type": {"title": "Unit type", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "type": "string", "x-nullable": true}, "elements": {"title": "Elements", "type": "string", "x-nullable": true}, "conversion_factor": {"title": "Conversion factor", "type": "number", "x-nullable": true}, "dimensions": {"type": "array", "items": {"type": "number"}, "x-nullable": true}, "conversion_baseunit_index": {"title": "Conversion baseunit index", "type": "integer", "x-nullable": true}}}, "RawDefinition": {"type": "object", "properties": {"description": {"title": "Description", "type": "string", "x-nullable": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "value_type": {"title": "Value type", "type": "string", "x-nullable": true}, "unit_id": {"title": "Unit id", "type": "integer", "x-nullable": true}}, "x-nullable": true}, "RawProperty": {"required": ["def_id"], "type": "object", "properties": {"value": {"title": "Value", "type": "string", "x-nullable": true}, "def_id": {"title": "Def id", "type": "integer"}}}, "RawPropertySet": {"required": ["properties"], "type": "object", "properties": {"description": {"title": "Description", "type": "string", "x-nullable": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "properties": {"type": "array", "items": {"$ref": "#/definitions/RawProperty"}}}}, "RawElement": {"required": ["uuid", "type"], "type": "object", "properties": {"uuid": {"title": "Uuid", "type": "string", "minLength": 1}, "type": {"title": "Type", "type": "string", "minLength": 1}, "attributes": {"title": "Attributes", "type": "integer", "x-nullable": true}, "psets": {"type": "array", "items": {"type": "integer"}, "x-nullable": true}, "classifications": {"type": "array", "items": {"type": "integer"}, "x-nullable": true}}}, "RawElements": {"required": ["elements"], "type": "object", "properties": {"units": {"type": "array", "items": {"$ref": "#/definitions/RawUnit"}, "x-nullable": true}, "definitions": {"type": "array", "items": {"$ref": "#/definitions/RawDefinition"}, "x-nullable": true}, "property_sets": {"type": "array", "items": {"$ref": "#/definitions/RawPropertySet"}, "x-nullable": true}, "classifications": {"type": "array", "items": {"$ref": "#/definitions/Classification"}, "x-nullable": true}, "elements": {"type": "array", "items": {"$ref": "#/definitions/RawElement"}}}}, "ElementPropertySetRelation": {"required": ["element_uuid", "property_set_id"], "type": "object", "properties": {"element_uuid": {"title": "Element uuid", "type": "string", "minLength": 1}, "property_set_id": {"title": "Property set id", "type": "integer"}}}, "Space": {"required": ["uuid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "x-nullable": true}, "longname": {"title": "Longname", "type": "string", "maxLength": 255, "x-nullable": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 255, "minLength": 1}, "zone_set": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "Zone": {"required": ["name", "uuid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 255, "minLength": 1}, "zones": {"type": "array", "items": {"$ref": "#/definitions/Zone"}}, "parent_id": {"title": "Parent id", "type": "integer"}, "spaces": {"type": "array", "items": {"$ref": "#/definitions/Space"}}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "color": {"title": "Color", "type": "string", "maxLength": 8, "x-nullable": true}}}, "ZoneSpace": {"required": ["uuid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "x-nullable": true}, "longname": {"title": "Longname", "type": "string", "maxLength": 255, "x-nullable": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 255, "minLength": 1}, "zone_set": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "UserProjectUpdate": {"required": ["role"], "type": "object", "properties": {"role": {"title": "Role", "type": "integer", "enum": [100, 50, 25]}}}, "UserCloudUpdate": {"required": ["role"], "type": "object", "properties": {"role": {"title": "Role", "type": "integer", "enum": [100, 50]}}}, "WebHook": {"required": ["events", "url", "secret"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "events": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "url": {"title": "Url", "type": "string", "maxLength": 1024, "minLength": 1}, "secret": {"title": "Secret", "type": "string", "maxLength": 256, "minLength": 1}}}, "CloudInvitation": {"required": ["email", "redirect_uri"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "description": "User will be redirected to this uri when he accepts the invitation", "type": "string", "minLength": 1}}}, "CloudRole": {"required": ["cloud"], "type": "object", "properties": {"cloud": {"title": "Cloud", "type": "integer"}, "role": {"title": "Role", "type": "integer", "enum": [100, 50]}}}, "ProjectRole": {"required": ["project"], "type": "object", "properties": {"project": {"title": "Project", "type": "integer"}, "role": {"title": "Role", "type": "integer", "enum": [100, 50, 25]}}}, "SelfUser": {"required": ["email", "firstname", "lastname"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "company": {"title": "Company", "type": "string", "x-nullable": true}, "firstname": {"title": "Firstname", "type": "string", "minLength": 1}, "lastname": {"title": "Lastname", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "clouds": {"type": "array", "items": {"$ref": "#/definitions/CloudRole"}, "readOnly": true}, "projects": {"type": "array", "items": {"$ref": "#/definitions/ProjectRole"}, "readOnly": true}, "oidc_sub": {"title": "Oidc sub", "type": "string", "maxLength": 255, "x-nullable": true}}, "title": "SelfUser"}}}