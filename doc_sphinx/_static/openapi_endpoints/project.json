{"swagger": "2.0", "info": {"title": "BIMData API", "description": "BIMData API is a tool to interact with your models stored on BIMData\u2019s servers.\n    Through the API, you can manage your projects, the clouds, upload your IFC files and manage them through endpoints.", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "contact@bimdata.io"}, "license": {"name": "Copyright BIMData.io"}, "version": "v1"}, "host": "api-staging.bimdata.io", "schemes": ["https"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"type": "apiKey", "description": "Copy/paste a valid access token here prefixed with \"Bearer \"", "name": "Authorization", "in": "header"}}, "security": [{"Bearer": []}], "paths": {"/cloud/{cloud_pk}/project": {"get": {"operationId": "getProjects", "summary": "Retrieve all projects", "description": "Retrieve all projects of the cloud", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Project"}}}}, "tags": ["project"]}, "post": {"operationId": "createProject", "summary": "Create a project", "description": "Create a project\nRequired scopes: org:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{id}": {"get": {"operationId": "getProject", "summary": "Retrieve a project", "description": "Retrieve a project", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateProject", "summary": "Update all fields of a project", "description": "Update all fields of a project\nRequired scopes: org:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["project"]}, "patch": {"operationId": "updateProject", "summary": "Update some fields of a project", "description": "Update some fields of a project\nRequired scopes: org:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Project"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Project"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteProject", "summary": "Delete a project", "description": "It can take a long time to respond because we may need to delete all properties of all elements of all models in the project\nRequired scopes: org:manage", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/project/{id}/tree": {"get": {"operationId": "getProjectTree", "summary": "Retrieve the complete DMS tree", "description": "Returns the document tree from root folder", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this project.", "required": true, "type": "integer"}]}, "/cloud/{cloud_pk}/project/{project_pk}/classification": {"get": {"operationId": "getClassifications", "summary": "Retrieve all classifications", "description": "Retrieve all classifications of all models in the project\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}}, "tags": ["project"]}, "post": {"operationId": "createClassification", "summary": "Create a classification", "description": "\n        Bulk create available.\n        You can either post an object or a list of objects.\n        Is you post a list, the response will be a list (in the same order) of created objects or of errors if any\n        If at least one create succeeded, the status code will be 201. If every create failed, the status code we'll be 400 with the list of errors\n    \n    If created classification already exists, it will not be duplicated and the previous one will be returned.\n    You also can add a 'classification' filter on this endpoint. By ex: /classification?name='untec'. The name is case sensitive\n    \nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}, "400": {"description": "All creates failed: list of errors"}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/classification/{id}": {"get": {"operationId": "getClassification", "summary": "Retrieve a classification", "description": "Retrieve a classification\nRequired scopes: ifc:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Classification"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateClassification", "summary": "Update all fields of a classification", "description": "Update all fields of a classification\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Classification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Classification"}}}, "tags": ["project"]}, "patch": {"operationId": "updateClassification", "summary": "Update some fields of a classification", "description": "Update some fields of a classification\nRequired scopes: ifc:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Classification"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Classification"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteClassification", "summary": "Delete a classification", "description": "All elements having this classification will lose it\nRequired scopes: ifc:write", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this classification.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/document": {"get": {"operationId": "getClassifications", "summary": "Retrieve all classifications", "description": "Retrieve all classifications of all models in the project\nRequired scopes: document:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Document"}}}}, "tags": ["project"]}, "post": {"operationId": "createClassification", "summary": "Create a classification", "description": "\nRequired scopes: document:write", "parameters": [{"name": "parent", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "parent_id", "in": "formData", "required": false, "type": "integer"}, {"name": "creator", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "project", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "name", "in": "formData", "description": "Shown name of the file", "required": true, "type": "string", "maxLength": 512, "minLength": 1}, {"name": "file_name", "in": "formData", "description": "Full name of the file", "required": false, "type": "string", "maxLength": 512, "x-nullable": true}, {"name": "description", "in": "formData", "description": "Description of the file", "required": false, "type": "string", "x-nullable": true}, {"name": "file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "size", "in": "formData", "description": "Size of the file. The file may be compressed and show a smaller size", "required": false, "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/document/{id}": {"get": {"operationId": "getClassification", "summary": "Retrieve a classification", "description": "Retrieve a classification\nRequired scopes: document:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateClassification", "summary": "Update all fields of a classification", "description": "Update all fields of a classification\nRequired scopes: document:write", "parameters": [{"name": "parent", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "parent_id", "in": "formData", "required": false, "type": "integer"}, {"name": "creator", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "project", "in": "formData", "required": false, "type": "integer", "x-nullable": true}, {"name": "name", "in": "formData", "description": "Shown name of the file", "required": true, "type": "string", "maxLength": 512, "minLength": 1}, {"name": "file_name", "in": "formData", "description": "Full name of the file", "required": false, "type": "string", "maxLength": 512, "x-nullable": true}, {"name": "description", "in": "formData", "description": "Description of the file", "required": false, "type": "string", "x-nullable": true}, {"name": "file", "in": "formData", "required": false, "type": "file", "x-nullable": true}, {"name": "size", "in": "formData", "description": "Size of the file. The file may be compressed and show a smaller size", "required": false, "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["project"]}, "patch": {"operationId": "updateClassification", "summary": "Update some fields of a classification", "description": "Update some fields of a classification\nRequired scopes: document:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Document"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteClassification", "summary": "Delete a classification", "description": "All elements having this classification will lose it\nRequired scopes: document:write", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this document.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/folder": {"get": {"operationId": "getFolders", "summary": "Retrieve all folders", "description": "Retrieve all folders in the project. This is an array of folder. If you want to get the tree of all folders, see getProjectTree\nRequired scopes: document:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Folder"}}}}, "tags": ["project"]}, "post": {"operationId": "createFolder", "summary": "Create a folder", "description": "If the created folder have no parent, it will be put as a child of the default root folder of the project\nRequired scopes: document:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Folder"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/folder/{id}": {"get": {"operationId": "getFolder", "summary": "Retrieve a folder", "description": "Retrieve a folder\nRequired scopes: document:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateFolder", "summary": "Update all fields of a folder", "description": "Update all fields of a folder\nRequired scopes: document:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Folder"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "patch": {"operationId": "updateFolder", "summary": "Update some fields of a folder", "description": "Update some fields of a folder\nRequired scopes: document:write", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Folder"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Folder"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteFolder", "summary": "Delete a folder", "description": "All files and subfolders will be deleted too\nRequired scopes: document:write", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this folder.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/invitation": {"get": {"operationId": "getProjectInvitations", "summary": "Retrieve all pending invitations in the project", "description": "Returns app's invitations only\nRequired scopes: org:manage", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ProjectInvitation"}}}}, "tags": ["project"]}, "post": {"operationId": "inviteProjectUser", "summary": "Invite a project member", "description": "Invite a project member. If the user is not already a cloud member, they will also be invited in the cloud with USER role.\nRequired scopes: org:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ProjectInvitation"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ProjectInvitation"}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/invitation/{id}": {"delete": {"operationId": "cancelProjectUserInvitation", "summary": "Cancel a pending invitation", "description": "\nRequired scopes: org:manage", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "description": "A unique integer value identifying this invitation.", "required": true, "type": "integer"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/user": {"get": {"operationId": "getProjectUsers", "summary": "Retrieve all users in a project", "description": "Each member of a project can see other members of the project\nRequired scopes: cloud:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}, "/cloud/{cloud_pk}/project/{project_pk}/user/{id}": {"get": {"operationId": "getProjectUser", "summary": "Retrieve a user in a project", "description": "Each member of a project can see other members of the project\nRequired scopes: cloud:read", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["project"]}, "put": {"operationId": "fullUpdateProjectUser", "summary": "Update all fields of a project user", "description": "Change the user role in the cloud\nRequired scopes: cloud:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserProjectUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["project"]}, "patch": {"operationId": "updateProjectUser", "summary": "Update some fields of a project user", "description": "Change the user role in the cloud\nRequired scopes: cloud:manage", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserProjectUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["project"]}, "delete": {"operationId": "deleteProjectUser", "summary": "Remove a user from a project", "description": "Remove a user from a project\nRequired scopes: cloud:manage", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["project"]}, "parameters": [{"name": "cloud_pk", "in": "path", "required": true, "type": "string"}, {"name": "id", "in": "path", "required": true, "type": "string"}, {"name": "project_pk", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"SelfBcfUser": {"required": ["id", "email"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}}, "title": "SelfBcfUser"}, "BcfProject": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the project", "type": "string", "maxLength": 256, "minLength": 1}}}, "TopicType": {"required": ["topic_type"], "type": "object", "properties": {"topic_type": {"title": "Topic type", "type": "string", "maxLength": 255, "minLength": 1}}}, "TopicStatus": {"required": ["topic_status"], "type": "object", "properties": {"topic_status": {"title": "Topic status", "type": "string", "maxLength": 255, "minLength": 1}}}, "Label": {"required": ["label"], "type": "object", "properties": {"label": {"title": "Label", "type": "string", "maxLength": 255, "minLength": 1}}}, "Priority": {"required": ["priority"], "type": "object", "properties": {"priority": {"title": "Priority", "type": "string", "maxLength": 255, "minLength": 1}}}, "Stage": {"required": ["stage"], "type": "object", "properties": {"stage": {"title": "Stage", "type": "string", "maxLength": 255, "minLength": 1}}}, "Extensions": {"required": ["topic_type", "topic_status", "topic_label", "priority", "stage"], "type": "object", "properties": {"topic_type": {"type": "array", "items": {"title": "TopicType", "type": "string", "minLength": 0}, "x-nullable": true}, "topic_status": {"type": "array", "items": {"title": "TopicStatus", "type": "string", "minLength": 0}, "x-nullable": true}, "topic_label": {"type": "array", "items": {"title": "Labels", "type": "string", "minLength": 0}, "x-nullable": true}, "priority": {"type": "array", "items": {"title": "Priority", "type": "string", "minLength": 0}, "x-nullable": true}, "user_id_type": {"type": "array", "items": {"type": "string", "minLength": 1}, "readOnly": true}, "stage": {"type": "array", "items": {"title": "Stage", "type": "string", "minLength": 0}, "x-nullable": true}}}, "BcfUser": {"title": "Creation author", "required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}}}, "Comment": {"required": ["comment"], "type": "object", "properties": {"guid": {"title": "Guid", "type": "string", "format": "uuid", "readOnly": true}, "date": {"title": "Date", "type": "string", "format": "date-time", "readOnly": true}, "author": {"type": "string", "format": "email", "title": "User", "x-nullable": true, "readOnly": true}, "comment": {"title": "Comment", "type": "string", "minLength": 1}, "viewpoint_guid": {"title": "Viewpoint guid", "type": "string", "format": "uuid", "x-nullable": true}, "reply_to_comment_guid": {"title": "Reply to comment guid", "type": "string", "format": "uuid", "x-nullable": true}, "topic_guid": {"title": "Topic guid", "type": "string", "format": "uuid", "readOnly": true}, "modified_author": {"type": "string", "format": "email", "title": "User", "x-nullable": true, "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "viewpoint_temp_id": {"title": "Viewpoint temp id", "description": "Only used when using POST on the full-topic route to bind viewpoint with comment", "type": "integer"}}}, "Direction": {"title": "Camera direction", "required": ["x", "y", "z"], "type": "object", "properties": {"x": {"title": "X", "type": "number"}, "y": {"title": "Y", "type": "number"}, "z": {"title": "Z", "type": "number"}}}, "Point": {"title": "Camera view point", "required": ["x", "y", "z"], "type": "object", "properties": {"x": {"title": "X", "type": "number"}, "y": {"title": "Y", "type": "number"}, "z": {"title": "Z", "type": "number"}}}, "OrthogonalCamera": {"title": "Orthogonal camera", "required": ["view_to_world_scale", "camera_direction", "camera_up_vector", "camera_view_point"], "type": "object", "properties": {"view_to_world_scale": {"title": "View to world scale", "type": "number"}, "camera_direction": {"$ref": "#/definitions/Direction"}, "camera_up_vector": {"$ref": "#/definitions/Direction"}, "camera_view_point": {"$ref": "#/definitions/Point"}}}, "PerspectiveCamera": {"title": "Perspective camera", "required": ["field_of_view", "camera_direction", "camera_up_vector", "camera_view_point"], "type": "object", "properties": {"field_of_view": {"title": "Field of view", "type": "number"}, "camera_direction": {"$ref": "#/definitions/Direction"}, "camera_up_vector": {"$ref": "#/definitions/Direction"}, "camera_view_point": {"$ref": "#/definitions/Point"}, "bimdata_camera_direction": {"$ref": "#/definitions/Direction"}}}, "LineSeriaizer": {"required": ["end_point", "start_point"], "type": "object", "properties": {"end_point": {"$ref": "#/definitions/Point"}, "start_point": {"$ref": "#/definitions/Point"}}}, "ClippingPlane": {"required": ["location", "direction"], "type": "object", "properties": {"location": {"$ref": "#/definitions/Point"}, "direction": {"$ref": "#/definitions/Direction"}}}, "Snapshot": {"title": "Snapshot", "required": ["snapshot_type"], "type": "object", "properties": {"snapshot_type": {"title": "Snapshot type", "type": "string", "maxLength": 255, "minLength": 1}, "snapshot_data": {"title": "Snapshot data", "type": "string", "readOnly": true, "format": "uri"}}}, "Component": {"type": "object", "properties": {"ifc_guid": {"title": "Ifc guid", "type": "string", "maxLength": 255, "x-nullable": true}, "originating_system": {"title": "Originating system", "type": "string", "maxLength": 255, "x-nullable": true}, "authoring_tool_id": {"title": "Authoring tool id", "type": "string", "maxLength": 255, "x-nullable": true}}}, "Coloring": {"required": ["color", "components"], "type": "object", "properties": {"color": {"title": "Color", "type": "string", "maxLength": 255, "minLength": 1}, "components": {"type": "array", "items": {"$ref": "#/definitions/Component"}}}}, "ViewSetupHints": {"title": "View setup hints", "type": "object", "properties": {"spaces_visible": {"title": "Spaces visible", "type": "boolean"}, "space_boundaries_visible": {"title": "Space boundaries visible", "type": "boolean"}, "openings_visible": {"title": "Openings visible", "type": "boolean"}}}, "Visibility": {"title": "Visibility", "required": ["exceptions", "view_setup_hints"], "type": "object", "properties": {"default_visibility": {"title": "Default visibility", "type": "boolean"}, "exceptions": {"type": "array", "items": {"$ref": "#/definitions/Component"}}, "view_setup_hints": {"$ref": "#/definitions/ViewSetupHints"}}}, "ComponentsParent": {"title": "Components", "required": ["visibility"], "type": "object", "properties": {"coloring": {"type": "array", "items": {"$ref": "#/definitions/Coloring"}}, "visibility": {"$ref": "#/definitions/Visibility"}, "selection": {"type": "array", "items": {"$ref": "#/definitions/Component"}}}}, "Viewpoint": {"type": "object", "properties": {"index": {"title": "Index", "type": "integer", "readOnly": true}, "guid": {"title": "Guid", "type": "string", "format": "uuid", "readOnly": true}, "orthogonal_camera": {"$ref": "#/definitions/OrthogonalCamera"}, "perspective_camera": {"$ref": "#/definitions/PerspectiveCamera"}, "lines": {"type": "array", "items": {"$ref": "#/definitions/LineSeriaizer"}}, "clipping_planes": {"type": "array", "items": {"$ref": "#/definitions/ClippingPlane"}}, "snapshot": {"$ref": "#/definitions/Snapshot"}, "components": {"$ref": "#/definitions/ComponentsParent"}, "temp_id": {"title": "Temp id", "description": "Only used when using POST on the full-topic route to bind viewpoint with comment", "type": "integer"}}}, "FullTopic": {"required": ["title"], "type": "object", "properties": {"guid": {"title": "Guid", "type": "string", "format": "uuid", "readOnly": true}, "creation_date": {"title": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "creation_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "modified_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "reference_links": {"type": "array", "items": {"title": "Reference links", "type": "string", "minLength": 1}, "x-nullable": true}, "ifcs": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "labels": {"type": "array", "items": {"title": "Labels", "type": "string", "minLength": 0}, "x-nullable": true}, "topic_type": {"type": "string", "title": "TopicType", "x-nullable": true}, "topic_status": {"type": "string", "title": "TopicStatus", "x-nullable": true}, "stage": {"type": "string", "title": "Stage", "x-nullable": true}, "priority": {"type": "string", "title": "Priority", "x-nullable": true}, "index": {"title": "Index", "type": "integer", "readOnly": true}, "assigned_to": {"type": "string", "format": "email", "title": "User", "x-nullable": true}, "format": {"title": "Format", "type": "string", "maxLength": 64, "minLength": 1}, "due_date": {"title": "Due date", "type": "string", "format": "date-time", "x-nullable": true}, "comments": {"type": "array", "items": {"$ref": "#/definitions/Comment"}}, "viewpoints": {"type": "array", "items": {"$ref": "#/definitions/Viewpoint"}}}}, "Topic": {"required": ["title"], "type": "object", "properties": {"guid": {"title": "Guid", "type": "string", "format": "uuid", "readOnly": true}, "topic_type": {"type": "string", "title": "TopicType", "x-nullable": true}, "topic_status": {"type": "string", "title": "TopicStatus", "x-nullable": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "priority": {"type": "string", "title": "Priority", "x-nullable": true}, "labels": {"type": "array", "items": {"title": "Labels", "type": "string", "minLength": 0}, "x-nullable": true}, "creation_date": {"title": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "creation_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "modified_date": {"title": "Modified date", "type": "string", "format": "date-time", "readOnly": true}, "modified_author": {"type": "string", "format": "email", "title": "User", "readOnly": true}, "assigned_to": {"type": "string", "format": "email", "title": "User", "x-nullable": true}, "reference_links": {"type": "array", "items": {"title": "Reference links", "type": "string", "minLength": 1}, "x-nullable": true}, "stage": {"type": "string", "title": "Stage", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "due_date": {"title": "Due date", "type": "string", "format": "date-time", "x-nullable": true}, "ifcs": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "format": {"title": "Format", "type": "string", "maxLength": 64, "minLength": 1}, "index": {"title": "Index", "type": "integer", "readOnly": true}}}, "Feature": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "description": "Name of the feature", "type": "string", "maxLength": 127, "minLength": 1}, "viewer_url": {"title": "Viewer url", "description": "Viewer's url to load instead of standard's one", "type": "string", "maxLength": 512, "x-nullable": true}}}, "User": {"title": "User", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "readOnly": true, "minLength": 1}, "company": {"title": "Company", "type": "string", "readOnly": true}, "firstname": {"title": "Firstname", "type": "string", "readOnly": true, "minLength": 1}, "lastname": {"title": "Lastname", "type": "string", "readOnly": true, "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "cloud_role": {"title": "Cloud role", "type": "integer", "readOnly": true}, "project_role": {"title": "Project role", "type": "integer", "readOnly": true}}}, "Cloud": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the cloud", "type": "string", "maxLength": 256, "minLength": 1}, "features": {"type": "array", "items": {"$ref": "#/definitions/Feature"}, "readOnly": true}, "creator": {"$ref": "#/definitions/User"}, "is_default": {"title": "Is default", "type": "boolean", "readOnly": true}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Date of the last update", "type": "string", "format": "date-time", "readOnly": true}}}, "CloudInvitation": {"required": ["email", "redirect_uri"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "description": "email of the user to invite", "type": "string", "maxLength": 256, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "description": "User will be redirected to this uri when they accept the invitation", "type": "string", "maxLength": 512, "minLength": 1}, "role": {"title": "Role", "type": "integer", "enum": [100, 50], "readOnly": true}}}, "Project": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "cloud": {"$ref": "#/definitions/Cloud"}, "name": {"title": "Name", "description": "Name of the project", "type": "string", "maxLength": 256, "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["A", "D"]}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Date of the last update", "type": "string", "format": "date-time", "readOnly": true}, "root_folder_id": {"title": "Root folder id", "type": "string", "readOnly": true}, "property_permissions_enabled": {"title": "Property permissions enabled", "type": "boolean"}}}, "Folder": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent_id": {"title": "Parent id", "type": "integer"}, "type": {"title": "Type", "description": "Value is \"Folder\". It is usefull to parse the tree and discriminate folders and files", "type": "string", "readOnly": true}, "name": {"title": "Name", "description": "Name of the folder", "type": "string", "maxLength": 255, "minLength": 1}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Date of the last update", "type": "string", "format": "date-time", "readOnly": true}, "children": {"type": "array", "items": {"$ref": "#/definitions/Folder"}, "readOnly": true}, "created_by": {"$ref": "#/definitions/User"}}}, "RuleComponent": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "value": {"title": "Value", "type": "string", "x-nullable": true}, "operator": {"title": "Operator", "type": "string", "x-nullable": true}, "params": {"title": "Params", "type": "string", "x-nullable": true}, "condition": {"title": "Condition", "type": "string", "x-nullable": true}, "rule_components": {"title": "Rule components", "type": "string", "x-nullable": true}}}, "Rule": {"required": ["condition"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "condition": {"title": "Condition", "type": "string", "minLength": 1}, "rule_components": {"type": "array", "items": {"$ref": "#/definitions/RuleComponent"}}, "on": {"$ref": "#/definitions/Rule"}}}, "Ruleset": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent_ruleset_id": {"title": "Parent ruleset id", "type": "string"}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "rules": {"type": "array", "items": {"$ref": "#/definitions/Rule"}}, "rulesets": {"type": "array", "items": {"$ref": "#/definitions/Ruleset"}}}}, "CheckPlan": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "rulesets": {"type": "array", "items": {"$ref": "#/definitions/Ruleset"}}, "is_default": {"title": "Is default", "type": "boolean", "readOnly": true}}}, "Classification": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "description": "Name of the clasification (uniformat, Untec, custom, etc)", "type": "string", "x-nullable": true}, "notation": {"title": "Notation", "description": "Code of the classification", "type": "string", "x-nullable": true}, "title": {"title": "Title", "description": "Full title of the classification", "type": "string", "x-nullable": true}}}, "Document": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "parent": {"title": "Parent", "type": "integer", "x-nullable": true}, "parent_id": {"title": "Parent id", "type": "integer"}, "creator": {"title": "Creator", "type": "integer", "x-nullable": true}, "project": {"title": "Project", "type": "integer", "x-nullable": true}, "name": {"title": "Name", "description": "Shown name of the file", "type": "string", "maxLength": 512, "minLength": 1}, "file_name": {"title": "File name", "description": "Full name of the file", "type": "string", "maxLength": 512, "x-nullable": true}, "description": {"title": "Description", "description": "Description of the file", "type": "string", "x-nullable": true}, "file": {"title": "File", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "size": {"title": "Size", "description": "Size of the file. The file may be compressed and show a smaller size", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "created_at": {"title": "Created at", "description": "Creation date", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "description": "Date of the last update", "type": "string", "format": "date-time", "readOnly": true}, "ifc_id": {"title": "Ifc id", "type": "string", "readOnly": true}}}, "Ifc": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true}, "creator": {"$ref": "#/definitions/User"}, "status": {"title": "Status", "type": "string", "enum": ["C", "D", "P", "I", "E"]}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "document_id": {"title": "Document id", "type": "string", "readOnly": true}, "document": {"$ref": "#/definitions/Document"}, "structure_file": {"title": "Structure file", "type": "string", "readOnly": true, "format": "uri"}, "systems_file": {"title": "Systems file", "type": "string", "readOnly": true, "format": "uri"}, "map_file": {"title": "Map file", "type": "string", "readOnly": true, "format": "uri"}, "gltf_file": {"title": "Gltf file", "type": "string", "readOnly": true, "format": "uri"}, "bvh_tree_file": {"title": "Bvh tree file", "type": "string", "readOnly": true, "format": "uri"}, "viewer_360_file": {"title": "Viewer 360 file", "type": "string", "readOnly": true, "format": "uri"}, "error_detail": {"title": "Error detail", "type": "string", "minLength": 1}, "project_id": {"title": "Project id", "type": "string", "readOnly": true}}}, "IfcFiles": {"type": "object", "properties": {"structure_file": {"title": "Structure file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "systems_file": {"title": "Systems file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "map_file": {"title": "Map file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "gltf_file": {"title": "Gltf file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "bvh_tree_file": {"title": "Bvh tree file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "viewer_360_file": {"title": "Viewer 360 file", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "IfcChecker": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "ifc": {"$ref": "#/definitions/Ifc"}, "creator": {"$ref": "#/definitions/User"}, "name": {"title": "Name", "type": "string", "maxLength": 256, "x-nullable": true}, "checkplan_id": {"title": "Checkplan id", "type": "integer"}, "results": {"type": "array", "items": {"required": ["checker"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "error_detail": {"title": "Error detail", "type": "string", "x-nullable": true}, "status": {"title": "Status", "type": "string", "enum": ["C", "P", "E"]}, "result": {"title": "Result", "type": "string", "x-nullable": true}, "collisions": {"title": "Collisions", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "checker": {"title": "Checker", "type": "integer"}}}, "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "checkplan": {"required": ["name", "project"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "protected": {"title": "Protected", "type": "boolean"}, "project": {"title": "Project", "type": "integer"}}, "readOnly": true}}}, "CheckerResult": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "status": {"title": "Status", "type": "string", "enum": ["C", "P", "E"]}, "result": {"title": "Result", "type": "string", "x-nullable": true}, "collisions": {"title": "Collisions", "type": "string", "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "error_detail": {"title": "Error detail", "type": "string", "minLength": 1}}}, "ElementClassificationRelation": {"required": ["element_uuid", "classification_id"], "type": "object", "properties": {"element_uuid": {"title": "Element uuid", "type": "string", "minLength": 1}, "classification_id": {"title": "Classification id", "type": "integer"}}}, "Unit": {"title": "Unit", "required": ["type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "type": {"title": "Type", "description": "IfcDerivedUnit, IfcContextDependentUnit, IfcConversionBasedUnit, IfcSIUnit or IfcMonetaryUnit", "type": "string", "minLength": 1}, "name": {"title": "Name", "description": "Name of the unit (ex: DEGREE)", "type": "string", "x-nullable": true}, "unit_type": {"title": "Unit type", "description": "IFC type of the unit or user defined type (ex: PLANEANGLEUNIT for DEGREE and RADIAN)", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "description": "Litteral prefix for scale (ex: MILLI, KILO, etc..)", "type": "string", "x-nullable": true}, "dimensions": {"description": "List of 7 units dimensions", "type": "array", "items": {"title": "Dimensions", "type": "number"}, "x-nullable": true}, "conversion_factor": {"title": "Conversion factor", "description": "Factor of conversion and base unit id (ex: DEGREE from RADIAN with factor 0.0174532925199433)", "type": "number", "x-nullable": true}, "conversion_baseunit": {"$ref": "#/definitions/Unit"}, "elements": {"title": "Elements", "description": "List of constitutive unit elements by id with corresponding exponent (ex: [meterID/1, secondID/-1] for velocity)", "type": "string", "x-nullable": true}}}, "PropertyDefinition": {"title": "Definition", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "unit": {"$ref": "#/definitions/Unit"}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "type": {"title": "Type", "description": "IfcProperty*, Ifc*Properties, IfcComplexProperty, IfcQuantity*, IfcComplexQuantity, Attribute", "type": "string", "x-nullable": true}, "value_type": {"title": "Value type", "description": "Type of the corresponding value (Boolean, integer, float, string, IfcRange, ...)", "type": "string", "x-nullable": true}}}, "Property": {"required": ["definition"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "definition": {"$ref": "#/definitions/PropertyDefinition"}, "value": {"title": "Value", "type": "string", "x-nullable": true}}}, "PropertySet": {"title": "Attributes", "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "properties": {"type": "array", "items": {"$ref": "#/definitions/Property"}}}}, "Element": {"required": ["type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 22, "minLength": 22}, "type": {"title": "Type", "description": "IFC type for the element", "type": "string", "maxLength": 64, "minLength": 1}, "attributes": {"$ref": "#/definitions/PropertySet"}, "property_sets": {"type": "array", "items": {"$ref": "#/definitions/PropertySet"}}, "classifications": {"type": "array", "items": {"$ref": "#/definitions/Classification"}}}}, "RawUnit": {"required": ["type"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "minLength": 1}, "unit_type": {"title": "Unit type", "type": "string", "x-nullable": true}, "prefix": {"title": "Prefix", "type": "string", "x-nullable": true}, "elements": {"title": "Elements", "type": "string", "x-nullable": true}, "conversion_factor": {"title": "Conversion factor", "type": "number", "x-nullable": true}, "dimensions": {"type": "array", "items": {"type": "number"}, "x-nullable": true}, "conversion_baseunit_index": {"title": "Conversion baseunit index", "type": "integer", "x-nullable": true}}}, "RawDefinition": {"type": "object", "properties": {"description": {"title": "Description", "type": "string", "x-nullable": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "value_type": {"title": "Value type", "type": "string", "x-nullable": true}, "unit_id": {"title": "Unit id", "type": "integer", "x-nullable": true}}, "x-nullable": true}, "RawProperty": {"required": ["def_id"], "type": "object", "properties": {"value": {"title": "Value", "type": "string", "x-nullable": true}, "def_id": {"title": "Def id", "type": "integer"}}}, "RawPropertySet": {"required": ["properties"], "type": "object", "properties": {"description": {"title": "Description", "type": "string", "x-nullable": true}, "name": {"title": "Name", "type": "string", "x-nullable": true}, "type": {"title": "Type", "type": "string", "x-nullable": true}, "properties": {"type": "array", "items": {"$ref": "#/definitions/RawProperty"}}}}, "RawClassification": {"type": "object", "properties": {"type": {"title": "Type", "type": "string", "x-nullable": true}, "notation": {"title": "Notation", "type": "string", "x-nullable": true}, "description": {"title": "Description", "type": "string", "x-nullable": true}}, "x-nullable": true}, "RawElement": {"required": ["uuid", "type"], "type": "object", "properties": {"uuid": {"title": "Uuid", "type": "string", "minLength": 1}, "type": {"title": "Type", "type": "string", "minLength": 1}, "attributes": {"title": "Attributes", "type": "integer", "x-nullable": true}, "psets": {"type": "array", "items": {"type": "integer"}, "x-nullable": true}, "classifications": {"type": "array", "items": {"type": "integer"}, "x-nullable": true}}}, "RawElements": {"required": ["elements"], "type": "object", "properties": {"units": {"type": "array", "items": {"$ref": "#/definitions/RawUnit"}, "x-nullable": true}, "definitions": {"type": "array", "items": {"$ref": "#/definitions/RawDefinition"}, "x-nullable": true}, "property_sets": {"type": "array", "items": {"$ref": "#/definitions/RawPropertySet"}, "x-nullable": true}, "classifications": {"type": "array", "items": {"$ref": "#/definitions/RawClassification"}, "x-nullable": true}, "elements": {"type": "array", "items": {"$ref": "#/definitions/RawElement"}}}}, "ElementPropertySetRelation": {"required": ["element_uuid", "property_set_id"], "type": "object", "properties": {"element_uuid": {"title": "Element uuid", "type": "string", "minLength": 1}, "property_set_id": {"title": "Property set id", "type": "integer"}}}, "Space": {"required": ["uuid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "x-nullable": true}, "longname": {"title": "Longname", "type": "string", "maxLength": 255, "x-nullable": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 255, "minLength": 1}, "zone_set": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "Zone": {"required": ["name", "uuid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 255, "minLength": 1}, "zones": {"type": "array", "items": {"$ref": "#/definitions/Zone"}}, "parent_id": {"title": "Parent id", "type": "integer"}, "spaces": {"type": "array", "items": {"$ref": "#/definitions/Space"}}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "color": {"title": "Color", "type": "string", "maxLength": 8, "x-nullable": true}}}, "ZoneSpace": {"required": ["uuid"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "x-nullable": true}, "longname": {"title": "Longname", "type": "string", "maxLength": 255, "x-nullable": true}, "uuid": {"title": "Uuid", "type": "string", "maxLength": 255, "minLength": 1}, "zone_set": {"type": "array", "items": {"type": "integer"}, "readOnly": true, "uniqueItems": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}}}, "ProjectInvitation": {"required": ["email", "redirect_uri", "role"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "description": "email of the user to invite", "type": "string", "maxLength": 256, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "description": "User will be redirected to this uri when they accept the invitation", "type": "string", "maxLength": 512, "minLength": 1}, "role": {"title": "Role", "type": "integer", "enum": [100, 50, 25]}}}, "UserProjectUpdate": {"type": "object", "properties": {"role": {"title": "Role", "description": "User's role in the project", "type": "integer", "enum": [100, 50, 25]}}}, "UserCloudUpdate": {"type": "object", "properties": {"role": {"title": "Role", "description": "Role of the user in the cloud", "type": "integer", "enum": [100, 50]}}}, "WebHook": {"required": ["events", "url", "secret"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "events": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}, "url": {"title": "Url", "type": "string", "maxLength": 1024, "minLength": 1}, "secret": {"title": "Secret", "type": "string", "maxLength": 256, "minLength": 1}}}, "CloudRole": {"required": ["cloud"], "type": "object", "properties": {"cloud": {"title": "Cloud", "type": "integer"}, "role": {"title": "Role", "description": "Role of the user in the cloud", "type": "integer", "enum": [100, 50]}}}, "ProjectRole": {"required": ["project"], "type": "object", "properties": {"project": {"title": "Project", "type": "integer"}, "role": {"title": "Role", "description": "User's role in the project", "type": "integer", "enum": [100, 50, 25]}}}, "SelfUser": {"required": ["email", "firstname", "lastname"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "company": {"title": "Company", "type": "string", "x-nullable": true}, "firstname": {"title": "Firstname", "type": "string", "minLength": 1}, "lastname": {"title": "Lastname", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "clouds": {"type": "array", "items": {"$ref": "#/definitions/CloudRole"}, "readOnly": true}, "projects": {"type": "array", "items": {"$ref": "#/definitions/ProjectRole"}, "readOnly": true}, "oidc_sub": {"title": "Oidc sub", "type": "string", "maxLength": 255, "x-nullable": true}}, "title": "SelfUser"}}}