version: 2

references:
  container_config: &container_config
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo

jobs:
  test:
    <<: *container_config
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache: #Download and cache dependencies
          keys:
            - v1-dependencies-npm-{{ checksum "doc_sphinx/package-lock.json" }}
            - v1-dependencies-npm
      - restore_cache: #Download and cache dependencies
          keys:
            - v1-dependencies-pip-{{ checksum "doc_sphinx/requirements.txt" }}
            - v1-dependencies-pip
      - run:
          name: install nodejs
          command: |
            wget https://raw.githubusercontent.com/visionmedia/n/master/bin/n -O /usr/local/bin/n
            chmod +x /usr/local/bin/n
            sudo n 10
      - run:
          name: install dependencies
          command: |
            sudo apt-get install libxi6 -y
            cd doc_sphinx
            npm ci
            pip install -r requirements.txt
      - run:
          name: test
          command: |
            cd doc_sphinx
            npm test
      - save_cache:
          key: v1-dependencies-npm-{{ checksum "doc_sphinx/package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - save_cache:
          key: v1-dependencies-pip-{{ checksum "doc_sphinx/requirements.txt" }}
          paths:
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"

  branch:
    <<: *container_config
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: push to docker hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker pull bimdata/deployment:latest
            # We can't mount volumes in docker in circleci (https://discuss.circleci.com/t/why-circleci-2-0-does-not-support-mounting-folders/11605/14)
            # so we create a container, copy files in it then start it
            docker create --name deployment -v /var/run/docker.sock:/var/run/docker.sock bimdata/deployment:latest
            docker cp ~/repo deployment:/var/repo
            docker start deployment

            SLUG_BRANCH="$(echo "$CIRCLE_BRANCH" | iconv -t ascii//TRANSLIT | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z)"

            docker exec -e ANSIBLE_VAULT_PASSWD -it deployment ansible-playbook build.yml -i inventories/dev --tags=documentation --extra-vars="{\"context_dir\":\"/var/repo\",\"ansible_ssh_private_key_file\":\"./files/deploy_rsa\",\"tag_to_deploy\":\"${SLUG_BRANCH}\"}" --user=deploy

            docker push bimdata/documentation:${SLUG_BRANCH}

            docker run -e ANSIBLE_VAULT_PASSWD -it bimdata/deployment:latest ansible-playbook -i inventories/dev deploy.yml --tags=documentation --extra-vars="{\"ansible_ssh_private_key_file\":\"./files/deploy_rsa\",\"tag_to_deploy\":\"${SLUG_BRANCH}\"}" --user=deploy
      - run:
          name: url of the build
          command: |
            SLUG_BRANCH="$(echo "$CIRCLE_BRANCH" | iconv -t ascii//TRANSLIT | sed -r s/[^a-zA-Z0-9]+/-/g | sed -r s/^-+\|-+$//g | tr A-Z a-z)"
            echo "$SLUG_BRANCH"
  master:
    <<: *container_config
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: push to docker hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker pull bimdata/deployment:latest
            # We can't mount volumes in docker in circleci (https://discuss.circleci.com/t/why-circleci-2-0-does-not-support-mounting-folders/11605/14)
            # so we create a container, copy files in it then start it
            docker create --name deployment -v /var/run/docker.sock:/var/run/docker.sock bimdata/deployment:latest
            docker cp ~/repo deployment:/var/repo
            docker start deployment

            docker exec -e ANSIBLE_VAULT_PASSWD -it deployment ansible-playbook build.yml -i inventories/staging --tags=documentation --extra-vars='{"context_dir":"/var/repo","ansible_ssh_private_key_file":"./files/deploy_rsa"}' --user=deploy
            docker push bimdata/documentation:latest

            docker exec -e ANSIBLE_VAULT_PASSWD -it deployment ansible-playbook build.yml -i inventories/next --tags=documentation --extra-vars='{"context_dir":"/var/repo","ansible_ssh_private_key_file":"./files/deploy_rsa"}' --user=deploy
            docker push bimdata/documentation:staging

            docker exec -e ANSIBLE_VAULT_PASSWD -it deployment ansible-playbook build.yml -i inventories/prod --tags=documentation --extra-vars='{"context_dir":"/var/repo","ansible_ssh_private_key_file":"./files/deploy_rsa"}' --user=deploy
            docker push bimdata/documentation:next

            docker run -e ANSIBLE_VAULT_PASSWD -it bimdata/deployment:latest ansible-playbook -i inventories/staging deploy.yml --tags=documentation --extra-vars "ansible_ssh_private_key_file=./files/deploy_rsa" --user=deploy

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test
      - branch:
          requires:
            - test
          filters:
            branches:
              ignore:
                - master
      - master:
          requires:
            - test
          filters:
            branches:
              only:
                - master
